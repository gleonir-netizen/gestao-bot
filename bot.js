// bot.js - SISTEMA CHECKPROPRIO BOT
const TelegramBot = require('node-telegram-bot-api');

// TOKEN DO SEU BOT - J√Å CONFIGURADO
const token = '8286230955:AAH64YT_hc-71szNGllEK88voPDFoC1q6Yw';

// Criar inst√¢ncia do bot
const bot = new TelegramBot(token, { polling: false });

console.log('ü§ñ CheckProprioSystem Bot - Inicializado');

// Fun√ß√£o para enviar mensagem de boas-vindas
async function sendWelcome(chatId) {
  try {
    const message = `‚úÖ *CheckProprioSystem - CONFIGURADO!* \n\n` +
      `üöÄ *Sistemas Integrados:*\n` +
      `‚Ä¢ GitHub: gestao-bot ‚úÖ\n` +
      `‚Ä¢ Dom√≠nio: gestao-bot.wetod.app ‚úÖ\n` +
      `‚Ä¢ Hostinger: chec.com.br ‚úÖ\n` +
      `‚Ä¢ SharePoint: STC ‚úÖ\n\n` +
      `üìã *Comandos Dispon√≠veis:*\n` +
      `/start - Iniciar sistema\n` +
      `/status - Status completo\n` +
      `/deploy - Notificar deploy\n\n` +
      `üåê *Links Importantes:*\n` +
      `‚Ä¢ Site: https://gestao-bot.wetod.app\n` +
      `‚Ä¢ Dom√≠nio: https://chec.com.br\n\n` +
      `‚ö° *Desenvolvimento ativo*`;

    await bot.sendMessage(chatId, message, { parse_mode: 'Markdown' });
    console.log(`‚úÖ Mensagem de boas-vindas enviada para chat: ${chatId}`);
  } catch (error) {
    console.error('‚ùå Erro ao enviar mensagem:', error.message);
  }
}

// Fun√ß√£o para notificar deploy
async function notifyDeploy(version = '1.0.0') {
  try {
    const message = `üöÄ *DEPLOY REALIZADO!* \n\n` +
      `*Sistema:* CheckProprioSystem\n` +
      `*Vers√£o:* ${version}\n` +
      `*Dom√≠nio:* https://gestao-bot.wetod.app\n` +
      `*Status:* ‚úÖ Sucesso\n` +
      `*Data:* ${new Date().toLocaleString('pt-BR')}\n\n` +
      `üìä *Todos os sistemas operacionais*`;

    // Aqui voc√™ precisa configurar o CHAT_ID depois
    // await bot.sendMessage(CHAT_ID, message, { parse_mode: 'Markdown' });
    
    console.log('üì¢ Notifica√ß√£o de deploy preparada');
    return message;
  } catch (error) {
    console.error('‚ùå Erro na notifica√ß√£o de deploy:', error);
  }
}

// Fun√ß√£o para verificar status do bot
async function getBotInfo() {
  try {
    const botInfo = await bot.getMe();
    return {
      name: botInfo.first_name,
      username: botInfo.username,
      status: 'Online ‚úÖ'
    };
  } catch (error) {
    return {
      status: 'Offline ‚ùå',
      error: error.message
    };
  }
}

// Exportar fun√ß√µes para usar em outros arquivos
module.exports = {
  bot,
  sendWelcome,
  notifyDeploy,
  getBotInfo
};
